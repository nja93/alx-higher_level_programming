matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3],[4, 5, 6]],2)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 8], [9, 10]], -2)
[[-0.5, -4.0, [-4.5, -5.0]]

>>> matrix_divided([[7, 9], [8, 2]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]
>>> print(matrix)
[[1, 2, 3]]
>>> matrix_divided([["Hi", "Njanja"], [6, 7]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[7, 9, 10, 11], [5, 6, 7]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 4], [6, 7]], "9")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided("1", 9)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 9], [21, 90]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[9, 7]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
